from aiogram import Bot, Dispatcher
from aiogram import types
from yapi import YclientsAPI

from db_helper import *

bot = Bot(token=os.environ.get('TG_TOKEN'), parse_mode='html')
dp = Dispatcher(bot)
y = YclientsAPI(os.environ.get('Y_TOKEN'), os.environ.get('USER_TOKEN'))


async def edit_message_text(message: types.Message, text, reply_markup):
    try:
        return await message.edit_text(text, reply_markup=reply_markup, parse_mode="html")
    except:
        try:
            await message.delete()
        except:
            pass
        await bot.send_message(chat_id=message.chat.id, text=text, reply_markup=reply_markup, parse_mode="html")


async def menu(text_storage, kb):
    service_date = text_storage.get('date')
    service_time = text_storage.get('time')
    worker = text_storage.get('staff')
    worker = f'{worker[1]} {worker[2]}' if worker else None
    service_ids = text_storage.get('service_ids')
    address = text_storage.get('address')
    services = '\n'.join([x for x in service_ids.values()]) if service_ids else None
    text = f'<b>–î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏:</b>\n' \
           f'üìç<b>–ê–¥—Ä–µ—Å —Å–∞–ª–æ–Ω–∞</b>: {address or "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"}\n' \
           f'üôå<b>–£—Å–ª—É–≥–∏</b>: {services or "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"}\n' \
           f'üóì<b>–î–∞—Ç–∞ –∑–∞–ø–∏—Å–∏</b>: {service_date or "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"}\n' \
           f'üïñ<b>–í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏</b>: {service_time or "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"}\n' \
           f'üòá<b>–ú–∞—Å—Ç–µ—Ä</b>: {worker or "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"}'
    kb.row_width = 1
    kb.add(types.InlineKeyboardButton(f'{"‚úÖ" if address else ""}–í—ã–±—Ä–∞—Ç—å –∞–¥—Ä–µ—Å —Å–∞–ª–æ–Ω–∞', callback_data='recordAddress'))
    if text_storage.get('company_id'):

        kb.add(types.InlineKeyboardButton(f'{"‚úÖ" if service_ids else ""}–í—ã–±—Ä–∞—Ç—å —É—Å–ª—É–≥–∏', callback_data='recordCategory0'))
        if text_storage.get('service_ids'):
            kb.add(types.InlineKeyboardButton(f'{"‚úÖ" if service_date else ""}–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É', callback_data='recordDate0'),
                   types.InlineKeyboardButton(f'{"‚úÖ" if worker else ""}–í—ã–±—Ä–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)', callback_data=f'recordWorker0'),
                   types.InlineKeyboardButton(f'{"‚úÖ" if service_time else ""}–í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è', callback_data=f'recordTime0'))

            if None not in [service_time, service_date]:
                kb.add(types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø–∏—Å—å', callback_data=f'recordAccept'))

        kb.add(types.InlineKeyboardButton('–°–±—Ä–æ—Å–∏—Ç—å', callback_data=f'recordReset'))

    kb.add(types.InlineKeyboardButton('üéÄ–ú–µ–Ω—é', callback_data='menu'))

    return text, kb